{"version":3,"sources":["Square.js","Board.js","dispatch.js","Input.js","Output.js","Utils.js","reducer.js","TestData.js","index.js","Robot.js"],"names":["Square","props","className","hoverClass","position","value","Board","renderSquare","i","key","current","squares","row","col","board","y","columns","x","push","createBoard","CommandsDispatch","React","createContext","myTextarea","useRef","useState","textareaVal","commands","state","setState","dispatch","useContext","useEffect","commandsArray","mIndex","trim","toUpperCase","indexOf","substr","split","filter","command","handleText","ref","rows","cols","onChange","event","target","onClick","type","reports","map","msg","index","style","listStyleType","indexToCoordinate","ret","isNaN","Math","floor","coordinateToIndex","coordinate","handleDetect","message","Array","isArray","error","initialState","ROW","fill","output","commandsReducer","action","current2","direction","console","log","handleMove","slice","detectedMessage","reportedMessage","status","handleReport","Error","data1","data2","ReactDOM","render","useReducer","length","forEach","arr","coorinate","str","String","stringToCoordinate","Provider","marginLeft","Input","Output","document","getElementById"],"mappings":"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","file":"static/js/main.6d3164b1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = props => (\n  <button className={`${props.hoverClass} square`}\n    position={props.position}\n  >\n    {props.value}\n  </button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst Board = (props) => {\n\n  const createBoard = (row, col) => {\n    const board = [];\n    let i = 0;\n    for (let y = row-1; y >= 0; y -= 1) {\n      const columns = [];\n      i = y * col - 1;\n      for (let x = 0; x < col; x += 1) {\n        i += 1;\n        columns.push(renderSquare(i, y, x));\n      }\n      board.push(<div key={y} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        key={i}\n        position={i}\n        hoverClass={i === props.current ? 'square--green': null}\n        // value={i}\n        value={props.squares[i]}\n      />\n    );\n  }\n\n  return <div>{createBoard(props.row, props.col)}</div>;\n}\n\nexport default Board;\n","import React from 'react';\n\nexport const CommandsDispatch = React.createContext(null);\n","import React, { useRef, useState, useEffect, useContext } from 'react';\nimport { CommandsDispatch } from './dispatch';\n\nexport default (props) => {\n  const myTextarea = useRef(null);\n  const [state, setState] = useState({\n    textareaVal: props.textareaVal || '',\n    commands: [],\n  });\n\n  const dispatch = useContext(CommandsDispatch);\n\n  function handleClick() {\n    dispatch({ type: 'setCommands', commands: state.commands });\n  }\n\n  useEffect(() => {\n    const handleText = () => {\n      let commandsArray = [];\n      const mIndex = state.textareaVal.trim().toUpperCase().indexOf('PLACE');\n      if (mIndex >= 0) {\n        const mTarget = state.textareaVal.substr(mIndex);\n        commandsArray = mTarget.split(/\\r?\\n/).filter((command) => {\n          return command;\n        });\n      }\n      return commandsArray;\n    }\n    const commands = handleText(state.textareaVal);\n    setState({...state, commands});\n  }, [state.textareaVal])\n\n  return (\n    <div className=\"panel\">\n      <div className=\"title\">Input</div>\n      <textarea ref={myTextarea} value = {state.textareaVal}\n        rows=\"30\" cols=\"40\"\n        onChange={(event)=>{\n          setState({\n            textareaVal: event.target.value\n          });\n        }}\n      >\n      </textarea>\n      <div>\n        <button onClick={ () => {\n          handleClick();\n        }}>Execute</button>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default (props) => {\n  const reports = props.reports ? \n    (\n      props.reports.map((msg, index) => {\n        return (\n          <li key={index}>\n            {msg}\n          </li>\n        );\n      })\n    ) : null\n  return (\n    <div className=\"panel\">\n      <div className=\"title\">Output</div>\n      <div className=\"output\"> \n        <ul style={{listStyleType:'none'}}>{reports}</ul>\n      </div>\n    </div>\n  )\n}","const COL = 5, ROW = 5;\n\nexport const indexToCoordinate = (index, col = COL) => {\n  let ret = null;\n  if (!isNaN(index) && !isNaN(col) && index >=0 && col > 0) {\n    const x = Math.floor(index / col);\n    const y = index % col;\n    ret = { x, y };\n  }\n  return ret;\n}\n\nexport const coordinateToIndex = (coordinate, col = COL) => {\n  let ret = -1;\n  if (coordinate && !isNaN(coordinate.x) && !isNaN(coordinate.y) && !isNaN(col) && coordinate.x >= 0 &&coordinate.y >= 0 && col > 0) {\n    ret = coordinate.x * col + coordinate.y;\n  }\n  return ret\n}\n\nexport const stringToCoordinate = (str) => {\n  let coordinate = null;\n  if (typeof str === 'string' || str instanceof String) {\n    const arr = str.split(',');\n    coordinate = (arr.length === 2) ? { x: +arr[0], y: +arr[1] } : null;\n  }\n  return coordinate;\n}\n\nexport const handleMove = (current, direction, col = COL, row = ROW) => {\n  if (isNaN(current) || isNaN(col) || isNaN(row)) {\n    return null;\n  }\n\n  if (current < 0 || col < 0 || row < 0) {\n    return null;\n  }\n\n  if (!direction || 'NWSEnwse'.indexOf(direction) < 0) {\n    return null;\n  }\n\n  const coordinate = indexToCoordinate(current, col);\n  if (!coordinate) {\n    return null;\n  }\n\n  let ret = null;\n  const { x, y } = coordinate;\n  switch(direction.toUpperCase()) {\n    case 'N':\n      if (x + 1 >= row) {\n        console.log('out of boundary', direction, current, x, y);\n      } else {\n        ret = coordinateToIndex({ x: x + 1, y }, col);\n      }\n      break;\n    case 'S':\n      if (x - 1 < 0) {\n        console.log('out of boundary', direction, current, x, y);\n      } else {\n        ret = coordinateToIndex({ x: x - 1, y }, col);\n      }\n      break;\n    case 'W':\n      if (y - 1 < 0) {\n        console.log('out of boundary', direction, current, x, y);\n      } else {\n        ret = coordinateToIndex({ x: x, y: y - 1 }, col);\n      }\n      break;\n    case 'E':\n      if (y + 1 >= col) {\n        console.log('out of boundary', direction, current, x, y);\n      } else {\n        ret = coordinateToIndex({ x: x, y: y + 1 }, col);\n      }\n      break;\n    default:\n      console.log('error from handleMove', direction);\n  }\n  return ret;\n}\n\nexport const handleDetect = (squares, index) => {\n  let message = null;\n  if (!Array.isArray(squares) || isNaN(index)) {\n    return null;\n  }\n  try {\n    if (squares[index] === \"X\") {\n      message = 'FULL';\n    } else if (squares[index] === null) {\n      message = 'EMPTY';\n    } else {\n      message = 'ERR';\n    }\n  } catch (error) {\n    message = null;\n  }\n  return message;\n}\n\nexport const handleReport = (squares, index, col = COL) => {\n  const status = handleDetect(squares, index);\n  const coordinate = indexToCoordinate(index, col);\n  if (status && coordinate && coordinate.x && coordinate.y) {\n    return `${coordinate.x},${coordinate.y},${status}`;\n  } else {\n    return null;\n  }\n}","import { useReducer } from 'react';\nimport { \n  coordinateToIndex,\n  handleMove,\n  handleDetect,\n  handleReport,\n} from './Utils';\n\nconst ROW = 5;\nconst COL = 5;\nconst initialState = {\n  row: ROW,\n  col: COL,\n  squares: Array(ROW * COL).fill(null),\n  commands: [],\n  output: [],\n  textareaVal: ``,\n}\n\nconst commandsReducer = (state, action) => {\n  switch (action.type) {\n    case 'primingPlate':\n      return { ...state, squares: action.squares };\n    case 'setCommands':\n      return { ...state, commands: action.commands, output: [] };\n    case 'PLACE':\n      const current = coordinateToIndex(action.position, state.col);\n      return { ...state, current };\n    case 'MOVE':\n      const current2 = handleMove(state.current, action.direction, state.col, state.row);\n      if (current2) {\n        return { ...state, current: current2 };\n      }\n      return state;\n    case 'DROP':\n      const squares = state.squares.slice();\n      squares[state.current] = \"X\";\n      return { ...state, squares };\n    case 'DETECT':\n      const detectedMessage = handleDetect(state.squares, state.current);\n      return { ...state, output: [...state.output, `Output: ${detectedMessage}`]};\n    case 'REPORT':\n      const reportedMessage = handleReport(state.squares, state.current, state.col);\n      return { ...state, output: [...state.output, `Output: ${reportedMessage}`]};\n    default:\n      throw new Error();\n  }\n}\n\nexport const useCommandsReducer = () => {\n  return useReducer(commandsReducer, initialState);\n};\n","export const data1 = [\n  'X', null, null, null, 'X',\n  null, null, 'X', null, null,\n  'X', 'X', null, null, null,\n  null, null, null, 'X', null,\n];\n\nexport const data2 = [\n  'X', null, null, null, null,\n  null, null, 'X', null, null,\n  'X', null, 'X', null, null,\n  'X', 'X', null, null, 'X',\n];","/* eslint-env browser */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Robot from './Robot';\nimport './index.css';\n\nReactDOM.render(<Robot />, document.getElementById('root'));\n","import React, { useEffect } from 'react';\nimport Board from './Board';\nimport Input from './Input';\nimport Output from './Output';\nimport { CommandsDispatch } from './dispatch';\nimport { stringToCoordinate } from './Utils';\nimport { useCommandsReducer } from './reducer';\nimport { data1, data2 } from './TestData';\n\nexport default () => {\n  const [state, dispatch] = useCommandsReducer();\n\n  useEffect(() => {\n    if (state.commands.length > 0) {\n      state.commands.forEach((command) => {\n        const arr = command.split(' ');\n        switch (arr[0].toUpperCase()) {\n          case 'PLACE':\n            const coorinate = stringToCoordinate(arr[1]);\n            coorinate && dispatch({ type: 'PLACE', position: coorinate });\n            break;\n          case 'MOVE':\n            arr[1] && dispatch({ type: 'MOVE', direction: arr[1] });\n            break;\n          case 'DROP':\n            dispatch({ type: 'DROP' });\n            break;\n          case 'DETECT':\n            dispatch({ type: 'DETECT' });\n            break;\n          case 'REPORT':\n            dispatch({ type: 'REPORT' });\n            break;\n          default:\n            console.error('error from useEffect', command);\n        }\n      });\n    }\n  }, [state.commands]);\n \n  return (\n    <CommandsDispatch.Provider value={dispatch}>\n      <div className=\"robot\">\n        <div className=\"board\">\n          <div className=\"title\">Plate</div>\n          <Board\n            row={state.row}\n            col={state.col}\n            squares={state.squares}\n            current={state.current}\n          />\n          <button onClick={ () => {\n            dispatch({ type: 'primingPlate', squares: data1 });\n          }}>\n            Set Test Data 1\n          </button>\n          <button style={{marginLeft: '20px'}} onClick={ () => {\n            dispatch({ type: 'primingPlate', squares: data2 });\n          }}>\n            Set Test Data 2\n          </button>\n        </div>\n        <Input textareaVal={state.textareaVal}></Input>\n        <Output reports={state.output}></Output>\n      </div>\n    </CommandsDispatch.Provider>\n  );\n}"],"sourceRoot":""}