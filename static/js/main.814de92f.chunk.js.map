{"version":3,"sources":["Square.js","Board.js","dispatch.js","Input.js","Output.js","Utils.js","Robot.js","index.js"],"names":["Square","props","className","hoverClass","position","value","Board","renderSquare","i","key","current","squares","row","col","board","y","columns","x","push","createBoard","CommandsDispatch","React","createContext","myTextarea","useRef","useState","textareaVal","commands","state","setState","dispatch","useContext","useEffect","commandsArray","mIndex","trim","toUpperCase","indexOf","substr","split","filter","command","handleText","ref","rows","cols","onChange","event","target","onClick","type","reports","map","msg","index","style","listStyleType","indexToCoordinate","Math","floor","coordinateToIndex","coordinate","handleDetect","message","error","initialState","Array","ROW","fill","output","ReactDOM","render","useReducer","action","current2","direction","console","handleMove","slice","detectedMessage","reportedMessage","status","handleReport","Error","length","forEach","arr","log","coorinate","str","String","stringToCoordinate","Provider","Input","Output","document","getElementById"],"mappings":"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","file":"static/js/main.814de92f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = props => (\n  <button className={`${props.hoverClass} square`}\n    position={props.position}\n  >\n    {props.value}\n  </button>\n);\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\nconst Board = (props) => {\n\n  const createBoard = (row, col) => {\n    const board = [];\n    let i = 0;\n    for (let y = row-1; y >= 0; y -= 1) {\n      const columns = [];\n      i = y * col - 1;\n      for (let x = 0; x < col; x += 1) {\n        i += 1;\n        columns.push(renderSquare(i, y, x));\n      }\n      board.push(<div key={y} className=\"board-row\">{columns}</div>);\n    }\n\n    return board;\n  }\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        key={i}\n        position={i}\n        hoverClass={i === props.current ? 'square--green': null}\n        value={props.squares[i]}\n      />\n    );\n  }\n\n  return <div>{createBoard(props.row, props.col)}</div>;\n}\n\nexport default Board;\n","import React from 'react';\n\nexport const CommandsDispatch = React.createContext(null);\n","import React, { useRef, useState, useEffect, useContext } from 'react';\nimport { CommandsDispatch } from './dispatch';\n\nexport default (props) => {\n  const myTextarea = useRef(null);\n  const [state, setState] = useState({\n    textareaVal: props.textareaVal || '',\n    commands: [],\n  });\n\n  const dispatch = useContext(CommandsDispatch);\n\n  function handleClick() {\n    dispatch({ type: 'setCommands', commands: state.commands });\n  }\n\n  useEffect(() => {\n    const handleText = () => {\n      let commandsArray = [];\n      const mIndex = state.textareaVal.trim().toUpperCase().indexOf('PLACE');\n      if (mIndex >= 0) {\n        const mTarget = state.textareaVal.substr(mIndex);\n        commandsArray = mTarget.split(/\\r?\\n/).filter((command) => {\n          return command;\n        });\n      }\n      return commandsArray;\n    }\n    const commands = handleText(state.textareaVal);\n    setState({...state, commands});\n  }, [state, state.textareaVal])\n\n  return (\n    <div className=\"panel\">\n      <div className=\"title\">Input</div>\n      <textarea ref={myTextarea} value = {state.textareaVal}\n        rows=\"30\" cols=\"40\"\n        onChange={(event)=>{\n          setState({\n            textareaVal: event.target.value\n          });\n        }}\n      >\n      </textarea>\n      <div>\n        <button onClick={ () => {\n          handleClick();\n        }}>Execute</button>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nexport default (props) => {\n  const reports = props.reports ? \n    (\n      props.reports.map((msg, index) => {\n        return (\n          <li key={index}>\n            {msg}\n          </li>\n        );\n      })\n    ) : null\n  return (\n    <div className=\"panel\">\n      <div className=\"title\">Output</div>\n      <div className=\"output\"> \n        <ul style={{listStyleType:'none'}}>{reports}</ul>\n      </div>\n    </div>\n  )\n}","export const indexToCoordinate = (index, col) => {\n  const x = Math.floor(index / col);\n  const y = index % col;\n  return { x, y };\n}\n\nexport const coordinateToIndex = (coordinate, col) => {\n  return coordinate.x * col + coordinate.y;\n}\n\nexport const stringToCoordinate = (str) => {\n  let coordinate;\n  if (typeof str === 'string' || str instanceof String) {\n    const arr = str.split(',');\n    coordinate = (arr.length === 2) ? { x: +arr[0], y: +arr[1] } : null;\n  }\n  return coordinate;\n}\n\nexport const handleMove = (current, direction, col, row) => {\n  const { x, y } = indexToCoordinate(current, col);\n  switch(direction) {\n    case 'N':\n      if (x + 1 >= row) {\n        console.error('out of boundary', direction, current, x, y);\n        break;\n      } else {\n        return coordinateToIndex({ x: x + 1, y }, col);\n      }\n    case 'S':\n      if (x - 1 < 0) {\n        console.error('out of boundary', direction, current, x, y);\n        break;\n      } else {\n        return coordinateToIndex({ x: x - 1, y }, col);\n      }\n    case 'W':\n      if (y - 1 < 0) {\n        console.error('out of boundary', direction, current, x, y);\n        break;\n      } else {\n        return coordinateToIndex({ x: x, y: y - 1 }, col);\n      }\n    case 'E':\n      if (y + 1 >= col) {\n        console.error('out of boundary', direction, current, x, y);\n        break;\n      } else {\n        return coordinateToIndex({ x: x, y: y + 1 }, col);\n      }\n    default:\n      console.error('error from handleMove', direction);\n  }\n}\n\nexport const handleDetect = (squares, index) => {\n  let message;\n  try {\n    if (squares[index] === \"X\") {\n      message = 'FULL';\n    } else {\n      message = 'EMPTY';\n    }\n  } catch (error) {\n    message = 'ERR';\n  }\n  return message;\n}\n\nexport const handleReport = (squares, index, col) => {\n  const status = handleDetect(squares, index);\n  const coordinate = indexToCoordinate(index, col);\n  return `${coordinate.x},${coordinate.y},${status}`;\n}","import React, { useEffect, useReducer } from 'react';\nimport Board from './Board';\nimport Input from './Input';\nimport Output from './Output';\nimport { CommandsDispatch } from './dispatch';\nimport { \n  coordinateToIndex,\n  stringToCoordinate,\n  handleMove,\n  handleDetect,\n  handleReport,\n} from './Utils';\nconst ROW = 5;\nconst COL = 5;\nconst initialState = {\n  row: ROW,\n  col: COL,\n  squares: Array(ROW * COL).fill(null),\n  commands: [],\n  output: [],\n  textareaVal: ``,\n}\n\nexport default () => {\n\n  const commandsReducer = (state, action) => {\n    switch (action.type) {\n      case 'setCommands':\n        return { ...state, commands: action.commands, output: [] };\n      case 'PLACE':\n        const current = coordinateToIndex(action.position, state.col);\n        return { ...state, current };\n      case 'MOVE':\n        const current2 = handleMove(state.current, action.direction, state.col, state.row);\n        if (current2) {\n          return { ...state, current: current2 };\n        }\n        return state;\n      case 'DROP':\n        const squares = state.squares.slice();\n        squares[state.current] = \"X\";\n        return { ...state, squares };\n      case 'DETECT':\n        const detectedMessage = handleDetect(state.squares, state.current);\n        return { ...state, output: [...state.output, `Output: ${detectedMessage}`]};\n      case 'REPORT':\n        const reportedMessage = handleReport(state.squares, state.current, state.col);\n        return { ...state, output: [...state.output, `Output: ${reportedMessage}`]};\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(commandsReducer, initialState);\n\n  useEffect(() => {\n    if (state.commands.length > 0) {\n      state.commands.forEach((command) => {\n        const arr = command.split(' ');\n        console.log(33, arr);\n        switch (arr[0].toUpperCase()) {\n          case 'PLACE':\n            const coorinate = stringToCoordinate(arr[1]);\n            console.log(1, coorinate);\n            coorinate && dispatch({ type: 'PLACE', position: coorinate });\n            // dispatch({ type: 'PLACE', position: coorinate });\n            break;\n          case 'MOVE':\n            arr[1] && dispatch({ type: 'MOVE', direction: arr[1] });\n            break;\n          case 'DROP':\n            dispatch({ type: 'DROP' });\n            break;\n          case 'DETECT':\n            dispatch({ type: 'DETECT' });\n            break;\n          case 'REPORT':\n            dispatch({ type: 'REPORT' });\n            break;\n          default:\n            console.error('error from useEffect', command);\n        }\n      });\n    }\n  }, [state.commands]);\n \n  return (\n    <CommandsDispatch.Provider value={dispatch}>\n      <div className=\"robot\">\n        <div className=\"board\">\n          <Board\n            row={state.row}\n            col={state.col}\n            squares={state.squares}\n            current={state.current}\n          />\n        </div>\n        <Input textareaVal={state.textareaVal}></Input>\n        <Output reports={state.output}></Output>\n      </div>\n    </CommandsDispatch.Provider>\n  );\n}","/* eslint-env browser */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Robot from './Robot';\nimport './index.css';\n\nReactDOM.render(<Robot />, document.getElementById('root'));\n"],"sourceRoot":""}